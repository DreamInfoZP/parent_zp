<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- spring中的依赖注入
            依赖注入：
                Dependency Injection
            IOC作用：
                降低程序间的耦合(依赖关系)
            依赖关系管理：
                以后都交给Spring来维护
             当前类要用到其他类对象，由spring为我们提供，我们只需要在配置文件中说明
             依赖关系的维护
                依赖注入：
                    能注入的数据：三种
                        基本类型和String
                        其他bean类型(在配置文件中或者注解配置过的bean)
                        复杂类型/集合类型
                    注入方式：三种
                        第一种：构造函数
                        第二种：使用set方法
                        第三种：使用注解提供
     -->

    <!-- 构造函数注入：
        使用的标签：constructor-arg
        标签出现的位置：bean标签的内部
        标签的属性：
            type：指定数据的数据类型
            index：用于指定注入的数据构造函数中指定索引的位置的参数赋值，索引位置从0开始
            name：用于指定构造函数中指定名称的参数赋值
            value：用于提供基本类型和String类型的数据
            ref：用于指定其他的bean类型

        优势：
            在获取bean对象时：注入数据时必须的操作，否则对象无法创建成功
        弊端：
            改变了bean对象的实例化方式，使我们在创建对象时，如果用不到这些数据，也必须提供
     -->
    <!--    <bean id="accountService" class="com.zp.service.impl.IAccountServiceImpl">-->
    <!--        <constructor-arg name="name" value="test"/>-->
    <!--        <constructor-arg name="age" value="18"/>-->
    <!--        <constructor-arg name="birthday" ref="now"/>-->
    <!--    </bean>-->

    <!--配置一个日期对象 -->
    <bean id="now" class="java.util.Date"/>

    <!-- set方法注入
        涉及的标签：property
        出现的位置：bean标签的内部
        标签的属性
            name
            value
            ref

        优势：
            创建对象时没有明确的限制，可以直接使用默认构造函数
        弊端：
            如果由某个成员必须有值，则获取对象可能ser方法没有执行
     -->
    <!--    <bean id="accountService" class="com.zp.service.impl.IAccountServiceImpl">-->
    <!--        <property name="name" value="123"/>-->
    <!--    </bean>-->

    <!-- 复杂类型的注入/集合类型的注入
        用于给list结构集合注入的标签：
            list array set
        用于给Map结构集合注入的标签
            map props

        结构相同，标签可以互换
    -->


</beans>